{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/hooks/use-login-submit.tsx"],"sourcesContent":["import { useActionState } from 'react'; // Assuming useActionState is available\r\n\r\n// Sample user object\r\nconst sampleUser = {\r\n    username: 'admin',\r\n    password: 'oiu',\r\n};\r\n\r\nconst useLoginAction = () => {\r\n    const [state, submitAction, isPending] = useActionState(\r\n        async (prevState: { error: string | null }, formData: FormData) => {\r\n            const username = formData.get('username') as string;\r\n            const password = formData.get('password') as string;\r\n\r\n            // Simulate an async operation (e.g., API call)\r\n            await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n            if (username === sampleUser.username && password === sampleUser.password) {\r\n                alert('Login successful!'); // Replace with actual login logic\r\n                return { error: null }; // Success\r\n            } else {\r\n                return { error: 'Invalid username or password' }; // Error\r\n            }\r\n        },\r\n        { error: null } // Initial state\r\n    );\r\n\r\n    return { state, submitAction, isPending };\r\n};\r\n\r\nexport default useLoginAction;"],"names":[],"mappings":";;;AAAA,iVAAwC,uCAAuC;;AAE/E,qBAAqB;AACrB,MAAM,aAAa;IACf,UAAU;IACV,UAAU;AACd;AAEA,MAAM,iBAAiB;IACnB,MAAM,CAAC,OAAO,cAAc,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAClD,OAAO,WAAqC;QACxC,MAAM,WAAW,SAAS,GAAG,CAAC;QAC9B,MAAM,WAAW,SAAS,GAAG,CAAC;QAE9B,+CAA+C;QAC/C,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,IAAI,aAAa,WAAW,QAAQ,IAAI,aAAa,WAAW,QAAQ,EAAE;YACtE,MAAM,sBAAsB,kCAAkC;YAC9D,OAAO;gBAAE,OAAO;YAAK,GAAG,UAAU;QACtC,OAAO;YACH,OAAO;gBAAE,OAAO;YAA+B,GAAG,QAAQ;QAC9D;IACJ,GACA;QAAE,OAAO;IAAK,EAAE,gBAAgB;;IAGpC,OAAO;QAAE;QAAO;QAAc;IAAU;AAC5C;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx"],"sourcesContent":["import React from 'react';\r\nimport useLoginAction from '../hooks/use-login-submit'; // Adjust the import path as needed\r\n\r\nconst Login: React.FC = () => {\r\n    const { state, submitAction, isPending } = useLoginAction();\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form action={submitAction}>\r\n                <div>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {state.error && <p style={{ color: 'red' }}>{state.error}</p>}\r\n                <button type=\"submit\" disabled={isPending}>\r\n                    {isPending ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"names":[],"mappings":";;;;AACA,uOAAwD,mCAAmC;;;AAE3F,MAAM,QAAkB;IACpB,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAc,AAAD;IAExD,qBACI,8OAAC;;0BACG,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAK,QAAQ;;kCACV,8OAAC;;0CACG,8OAAC;gCAAM,SAAQ;0CAAW;;;;;;0CAC1B,8OAAC;gCACG,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,QAAQ;;;;;;;;;;;;kCAGhB,8OAAC;;0CACG,8OAAC;gCAAM,SAAQ;0CAAW;;;;;;0CAC1B,8OAAC;gCACG,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,QAAQ;;;;;;;;;;;;oBAGf,MAAM,KAAK,kBAAI,8OAAC;wBAAE,OAAO;4BAAE,OAAO;wBAAM;kCAAI,MAAM,KAAK;;;;;;kCACxD,8OAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC3B,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;AAKnD;uCAEe"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/page.tsx"],"sourcesContent":["import Login from \"./components/login\";\n\nexport default function Home() {\n  return (\n    <Login />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC,2HAAA,CAAA,UAAK;;;;;AAEV"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}