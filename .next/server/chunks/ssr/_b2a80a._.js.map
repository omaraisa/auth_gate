{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/page.tsx"],"sourcesContent":["import {LoginForm} from \"./components/login\";\n\nexport default function Home() {\n  return (\n    <LoginForm />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC,2HAAA,CAAA,YAAS;;;;;AAEd"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/hooks/actions.tsx"],"sourcesContent":["\"use server\";\r\n\r\nimport { z } from \"zod\";\r\n// import { createToken, deleteToken } from \"../lib/token\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nconst testUser = {\r\n  id: \"1\",\r\n  email: \"i@m.cool\",\r\n  password: \"12345678\",\r\n};\r\n\r\nconst loginSchema = z.object({\r\n  email: z.string().email({ message: \"Invalid email address\" }).trim(),\r\n  password: z.string().min(8, { message: \"Password must be at least 8 characters\" }).trim(),\r\n});\r\n\r\nexport async function login(prevState: any, formData: FormData) {\r\n  const result = loginSchema.safeParse(Object.fromEntries(formData));\r\n\r\n  if (!result.success) {\r\n    return {\r\n      errors: result.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { email, password } = result.data;\r\n\r\n  if (email !== testUser.email || password !== testUser.password) {\r\n    return {\r\n      errors: {\r\n        email: [\"Invalid email or password\"],\r\n      },\r\n    };\r\n  }\r\n    // await createToken(testUser.id);\r\n\r\n    // redirect(\"http://localhost:3000\");\r\n    redirect(\"/geoportal\");\r\n}\r\n\r\nexport async function logout() {\r\n    // await deleteToken();\r\n    redirect(\"/login\");\r\n}"],"names":[],"mappings":";;;;;;AAGA,2DAA2D;AAC3D;;AAFA;AAEA;;;;;AAEA,MAAM,WAAW;IACf,IAAI;IACJ,OAAO;IACP,UAAU;AACZ;AAEA,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAAwB,GAAG,IAAI;IAClE,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAyC,GAAG,IAAI;AACzF;AAEO,eAAe,uCAAG,GAAH,MAAM,SAAc,EAAE,QAAkB;IAC5D,MAAM,SAAS,YAAY,SAAS,CAAC,OAAO,WAAW,CAAC;IAExD,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,OAAO,IAAI;IAEvC,IAAI,UAAU,SAAS,KAAK,IAAI,aAAa,SAAS,QAAQ,EAAE;QAC9D,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAA4B;YACtC;QACF;IACF;IACE,kCAAkC;IAElC,qCAAqC;IACrC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACb;AAEO,eAAe,uCAAI,GAAJ;IAClB,uBAAuB;IACvB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACb;;;IA3BsB;IAwBA;;AAxBA,+OAAA;AAwBA,+OAAA"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}