{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/page.tsx"],"sourcesContent":["import {LoginForm} from \"./components/login\";\n\nexport default function Home() {\n  return (\n    <LoginForm />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC,2HAAA,CAAA,YAAS;;;;;AAEd"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/lib/authenticateArcGIS.ts"],"sourcesContent":["'use server'\r\n\r\nimport { cookies } from 'next/headers';\r\n\r\nexport const serverAuthenticateArcGIS = async (\r\n    username: string,\r\n    password: string\r\n  ): Promise<{ token: string; expires: number } | null> => {\r\n    try {\r\n      const params = new URLSearchParams({\r\n        username,\r\n        password,\r\n        client: 'referer',\r\n        referer: 'http://localhost:3000', // or use process.env if deploying\r\n        f: 'json',\r\n      });\r\n  \r\n    const response = await fetch(\r\n      process.env.NEXT_PUBLIC_PORTAL_TOKEN_SERVICE_URL || '',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: params.toString(),\r\n      }\r\n    );\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.error) {\r\n        console.error('ArcGIS Token Error:', data.error);\r\n        return null;\r\n      }\r\n  \r\n    return {\r\n      token: data.token,\r\n      expires: Date.now() + data.expires * 1000,\r\n    };\r\n    } catch (err) {\r\n      console.error(err);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export async function isArcgisTokenValid(): Promise<boolean> {\r\n    const cookieStore = await cookies();\r\n    const token = cookieStore.get('arcgis_token');\r\n    const expires = cookieStore.get('arcgis_token_expiry');\r\n  \r\n    if (!token || !expires) return false;\r\n\r\n    const expiryTime = parseInt(expires.value);\r\n    return Date.now() < expiryTime - 120000; // 2 minutes buffer\r\n  }\r\n\r\n\r\n  "],"names":[],"mappings":";;;;;;AAEA;;;;;AAEO,MAAM,uCAAsB,GAAtB,2BAA2B,OACpC,UACA;IAEA,IAAI;QACF,MAAM,SAAS,IAAI,gBAAgB;YACjC;YACA;YACA,QAAQ;YACR,SAAS;YACT,GAAG;QACL;QAEF,MAAM,WAAW,MAAM,MACrB,gGAAoD,IACpD;YACE,QAAQ;YACR,SAAS;gBACT,gBAAgB;YAChB;YACA,MAAM,OAAO,QAAQ;QACvB;QAGA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,KAAK,EAAE;YACd,QAAQ,KAAK,CAAC,uBAAuB,KAAK,KAAK;YAC/C,OAAO;QACT;QAEF,OAAO;YACL,OAAO,KAAK,KAAK;YACjB,SAAS,KAAK,GAAG,KAAK,KAAK,OAAO,GAAG;QACvC;IACA,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;AACF;AAEO,eAAe,uCAAgB,GAAhB;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,QAAQ,YAAY,GAAG,CAAC;IAC9B,MAAM,UAAU,YAAY,GAAG,CAAC;IAEhC,IAAI,CAAC,SAAS,CAAC,SAAS,OAAO;IAE/B,MAAM,aAAa,SAAS,QAAQ,KAAK;IACzC,OAAO,KAAK,GAAG,KAAK,aAAa,QAAQ,mBAAmB;AAC9D;;;IAlDW;IAyCW;;AAzCX,+OAAA;AAyCW,+OAAA"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/hooks/actions.tsx"],"sourcesContent":["'use server';\r\n\r\nimport { cookies } from 'next/headers';\r\nimport { z } from 'zod';\r\nimport { redirect } from 'next/navigation';\r\nimport { serverAuthenticateArcGIS } from  '../lib/authenticateArcGIS';\r\n\r\nexport async function login(prevState: any, formData: FormData) {\r\n  const schema = z.object({\r\n    username: z.string().min(3),\r\n    password: z.string().min(4),\r\n  });\r\n\r\n  const parsed = schema.safeParse(Object.fromEntries(formData));\r\n  if (!parsed.success) {\r\n    return {\r\n      errors: parsed.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { username, password } = parsed.data;\r\n\r\n  const tokenData = await serverAuthenticateArcGIS(username, password);\r\n\r\n  if (tokenData) {\r\n    const cookieStore = await cookies();\r\n    cookieStore.set('arcgis_token', tokenData.token, {\r\n      httpOnly: false,\r\n      secure: true,\r\n      sameSite: 'lax',\r\n      path: '/',\r\n      expires: new Date(tokenData.expires),\r\n    });\r\n\r\n    cookieStore.set('arcgis_token_expiry', tokenData.expires.toString(), {\r\n      httpOnly: false,\r\n      secure: true,\r\n      sameSite: 'lax',\r\n      path: '/',\r\n      expires: new Date(tokenData.expires),\r\n    });\r\n\r\n    redirect(process.env.NEXT_PUBLIC_GEOPORTAL_URL || '/');\r\n  }\r\n\r\n  return {\r\n    errors: {\r\n      username: ['Invalid username or password'],\r\n    },\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;;AAFA;AACA;;;;;;;AAGO,eAAe,uCAAG,GAAH,MAAM,SAAc,EAAE,QAAkB;IAC5D,MAAM,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACtB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACzB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC3B;IAEA,MAAM,SAAS,OAAO,SAAS,CAAC,OAAO,WAAW,CAAC;IACnD,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,IAAI;IAE1C,MAAM,YAAY,MAAM,CAAA,GAAA,gIAAA,CAAA,2BAAwB,AAAD,EAAE,UAAU;IAE3D,IAAI,WAAW;QACb,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;QAChC,YAAY,GAAG,CAAC,gBAAgB,UAAU,KAAK,EAAE;YAC/C,UAAU;YACV,QAAQ;YACR,UAAU;YACV,MAAM;YACN,SAAS,IAAI,KAAK,UAAU,OAAO;QACrC;QAEA,YAAY,GAAG,CAAC,uBAAuB,UAAU,OAAO,CAAC,QAAQ,IAAI;YACnE,UAAU;YACV,QAAQ;YACR,UAAU;YACV,MAAM;YACN,SAAS,IAAI,KAAK,UAAU,OAAO;QACrC;QAEA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,6DAAyC;IACpD;IAEA,OAAO;QACL,QAAQ;YACN,UAAU;gBAAC;aAA+B;QAC5C;IACF;AACF;;;IA3CsB;;AAAA,+OAAA"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}