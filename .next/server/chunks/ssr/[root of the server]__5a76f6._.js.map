{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/login.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/page.tsx"],"sourcesContent":["import {LoginForm} from \"./components/login\";\n\nexport default function Home() {\n  return (\n    <LoginForm />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC,2HAAA,CAAA,YAAS;;;;;AAEd"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/lib/token.ts"],"sourcesContent":["import \"server-only\";\r\nimport { SignJWT, jwtVerify } from \"jose\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nconst secretKey = process.env.TOKEN_SECRET;\r\nconst encodedKey = new TextEncoder().encode(secretKey);\r\n\r\nexport async function createToken(userId: string) {\r\n  const expiresAt = new Date(Date.now() + 60 * 60 * 1000);\r\n  const token = await encrypt({ userId, expiresAt });\r\n\r\n  const cookieStore = await cookies();\r\n  cookieStore.set(\"authToken\", token, {\r\n    httpOnly: true,\r\n    secure: true,\r\n    expires: expiresAt,\r\n  });\r\n}\r\n\r\nexport async function deleteToken() {\r\n  const cookieStore = await cookies();\r\n  cookieStore.delete(\"authToken\");\r\n}\r\n\r\ntype TokenPayload = {\r\n  userId: string;\r\n  expiresAt: Date;\r\n};\r\n\r\nexport async function encrypt(payload: TokenPayload) {\r\n  return new SignJWT(payload)\r\n    .setProtectedHeader({ alg: \"HS256\" })\r\n    .setIssuedAt()\r\n    .setExpirationTime(\"1h\")\r\n    .sign(encodedKey);\r\n}\r\n\r\nexport async function decrypt(token: string | undefined = \"\") {\r\n  try {\r\n    const { payload } = await jwtVerify(token, encodedKey, {\r\n      algorithms: [\"HS256\"],\r\n    });\r\n    return payload;\r\n  } catch (error) {\r\n    console.log(\"Failed to verify auth token\", error);\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;AAEA;AADA;AAAA;;;;AAGA,MAAM,YAAY,QAAQ,GAAG,CAAC,YAAY;AAC1C,MAAM,aAAa,IAAI,cAAc,MAAM,CAAC;AAErC,eAAe,YAAY,MAAc;IAC9C,MAAM,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK;IAClD,MAAM,QAAQ,MAAM,QAAQ;QAAE;QAAQ;IAAU;IAEhD,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,aAAa,OAAO;QAClC,UAAU;QACV,QAAQ;QACR,SAAS;IACX;AACF;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,YAAY,MAAM,CAAC;AACrB;AAOO,eAAe,QAAQ,OAAqB;IACjD,OAAO,IAAI,0JAAA,CAAA,UAAO,CAAC,SAChB,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,WAAW,GACX,iBAAiB,CAAC,MAClB,IAAI,CAAC;AACV;AAEO,eAAe,QAAQ,QAA4B,EAAE;IAC1D,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,4JAAA,CAAA,YAAS,AAAD,EAAE,OAAO,YAAY;YACrD,YAAY;gBAAC;aAAQ;QACvB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,+BAA+B;IAC7C;AACF"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/hooks/actions.tsx"],"sourcesContent":["\"use server\";\r\n\r\nimport { z } from \"zod\";\r\nimport { createToken, deleteToken } from \"../lib/token\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nconst testUser = {\r\n  id: \"1\",\r\n  username: \"coolUser\",\r\n  password: \"82js72h1/113s\",\r\n};\r\n\r\nconst loginSchema = z.object({\r\n  username: z.string().min(3, { message: \"Invalid username\" }).trim(),\r\n  password: z.string().min(4, { message: \"Password must be at least 8 characters\" }).trim(),\r\n});\r\n\r\nexport async function login(prevState: any, formData: FormData) {\r\n  const result = loginSchema.safeParse(Object.fromEntries(formData));\r\n\r\n  if (!result.success) {\r\n    return {\r\n      errors: result.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { username, password } = result.data;\r\n\r\n  if (username !== testUser.username || password !== testUser.password) {\r\n    return {\r\n      errors: {\r\n        username: [\"Invalid username or password\"],\r\n      },\r\n    };\r\n  }\r\n    await createToken(testUser.id);\r\n\r\n    redirect(\"http://localhost:3000\");\r\n}\r\n\r\nexport async function logout() {\r\n    await deleteToken();\r\n    redirect(\"/login\");\r\n}"],"names":[],"mappings":";;;;;;AAGA;AACA;;AAFA;AAEA;;;;;;AAEA,MAAM,WAAW;IACf,IAAI;IACJ,UAAU;IACV,UAAU;AACZ;AAEA,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmB,GAAG,IAAI;IACjE,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAyC,GAAG,IAAI;AACzF;AAEO,eAAe,uCAAG,GAAH,MAAM,SAAc,EAAE,QAAkB;IAC5D,MAAM,SAAS,YAAY,SAAS,CAAC,OAAO,WAAW,CAAC;IAExD,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,IAAI;IAE1C,IAAI,aAAa,SAAS,QAAQ,IAAI,aAAa,SAAS,QAAQ,EAAE;QACpE,OAAO;YACL,QAAQ;gBACN,UAAU;oBAAC;iBAA+B;YAC5C;QACF;IACF;IACE,MAAM,CAAA,GAAA,mHAAA,CAAA,cAAW,AAAD,EAAE,SAAS,EAAE;IAE7B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACb;AAEO,eAAe,uCAAI,GAAJ;IAClB,MAAM,CAAA,GAAA,mHAAA,CAAA,cAAW,AAAD;IAChB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACb;;;IA1BsB;IAuBA;;AAvBA,+OAAA;AAuBA,+OAAA"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}