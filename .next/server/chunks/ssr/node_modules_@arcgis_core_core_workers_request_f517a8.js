module.exports = {

"[project]/node_modules/@arcgis/core/core/workers/request.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
*/ __turbopack_esm__({
    "execute": (()=>e)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$arcgis$2f$core$2f$core$2f$Error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@arcgis/core/core/Error.js [app-ssr] (ecmascript)");
;
function e(e, s) {
    let a = s.responseType;
    a ? "array-buffer" !== a && "blob" !== a && "json" !== a && "native" !== a && "native-request-init" !== a && "text" !== a && (a = "text") : a = "json", s.responseType = a;
    const r = s.signal;
    return delete s.signal, globalThis.invokeStaticMessage("request", {
        url: e,
        options: s
    }, {
        signal: r
    }).then(async (n)=>{
        let o, i, l, u, c;
        if (n.data) if (n.data instanceof ArrayBuffer) {
            if (!("json" !== a && "text" !== a && "blob" !== a || (o = new Blob([
                n.data
            ]), "json" !== a && "text" !== a || (u = await o.text(), "json" !== a)))) {
                try {
                    i = JSON.parse(u || null);
                } catch (p) {
                    const a = {
                        ...p,
                        url: e,
                        requestOptions: s
                    };
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$arcgis$2f$core$2f$core$2f$Error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]("request:server", p.message, a);
                }
                if (i.error) {
                    const a = {
                        ...i.error,
                        url: e,
                        requestOptions: s
                    };
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$arcgis$2f$core$2f$core$2f$Error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]("request:server", i.error.message, a);
                }
            }
        } else "native" === a && (n.data.signal = r, l = await fetch(n.data.url, n.data), n.httpStatus = l.status);
        switch(a){
            case "blob":
                c = o;
                break;
            case "json":
                c = i;
                break;
            case "native":
                c = l;
                break;
            case "text":
                c = u;
                break;
            default:
                c = n.data;
        }
        return {
            data: c,
            httpStatus: n.httpStatus,
            requestOptions: s,
            ssl: n.ssl,
            url: e
        };
    });
}
;
}}),

};

//# sourceMappingURL=node_modules_%40arcgis_core_core_workers_request_f517a8.js.map