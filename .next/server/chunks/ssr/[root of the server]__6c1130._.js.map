{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/hooks/actions.tsx"],"sourcesContent":["'use server';\r\n\r\nimport { cookies } from 'next/headers';\r\nimport { z } from 'zod';\r\nimport { redirect } from 'next/navigation';\r\nimport { serverAuthenticateArcGIS } from  '../lib/authenticateArcGIS';\r\n\r\nexport async function login(prevState: any, formData: FormData) {\r\n  const schema = z.object({\r\n    username: z.string().min(3),\r\n    password: z.string().min(4),\r\n  });\r\n\r\n  const parsed = schema.safeParse(Object.fromEntries(formData));\r\n  if (!parsed.success) {\r\n    return {\r\n      errors: parsed.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { username, password } = parsed.data;\r\n\r\n  const tokenData = await serverAuthenticateArcGIS(username, password);\r\n\r\n  if (tokenData) {\r\n    const cookieStore = await cookies();\r\n    cookieStore.set('arcgis_token', tokenData.token, {\r\n      httpOnly: false,\r\n      secure: true,\r\n      sameSite: 'lax',\r\n      path: '/',\r\n      expires: new Date(tokenData.expires),\r\n    });\r\n\r\n    cookieStore.set('arcgis_token_expiry', tokenData.expires.toString(), {\r\n      httpOnly: false,\r\n      secure: true,\r\n      sameSite: 'lax',\r\n      path: '/',\r\n      expires: new Date(tokenData.expires),\r\n    });\r\n\r\n    redirect(process.env.NEXT_PUBLIC_GEOPORTAL_URL || '/');\r\n  }\r\n\r\n  return {\r\n    errors: {\r\n      username: ['Invalid username or password'],\r\n    },\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;IAOsB"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/lib/authenticateArcGIS.ts"],"sourcesContent":["import { cookies } from 'next/headers';\r\n\r\nexport const serverAuthenticateArcGIS = async (\r\n    username: string,\r\n    password: string\r\n  ): Promise<{ token: string; expires: number } | null> => {\r\n    try {\r\n      const params = new URLSearchParams({\r\n        username,\r\n        password,\r\n        client: 'referer',\r\n        referer: 'http://localhost:3000', // or use process.env if deploying\r\n        f: 'json',\r\n      });\r\n  \r\n    const response = await fetch(\r\n      process.env.NEXT_PUBLIC_PORTAL_TOKEN_SERVICE_URL || '',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: params.toString(),\r\n      }\r\n    );\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (data.error) {\r\n        console.error('ArcGIS Token Error:', data.error);\r\n        return null;\r\n      }\r\n  \r\n      return {\r\n        token: data.token,\r\n        expires: Date.now() + data.expires * 1000,\r\n      };\r\n    } catch (err) {\r\n      console.error(err);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export async function isArcgisTokenValid(): Promise<boolean> {\r\n    const cookieStore = await cookies();\r\n    const token = cookieStore.get('arcgis_token');\r\n    const expires = cookieStore.get('arcgis_token_expiry');\r\n  \r\n    if (!token || !expires) return false;\r\n\r\n    const expiryTime = parseInt(expires.value);\r\n    return Date.now() < expiryTime;\r\n  }\r\n\r\n\r\n  "],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,2BAA2B,OACpC,UACA;IAEA,IAAI;QACF,MAAM,SAAS,IAAI,gBAAgB;YACjC;YACA;YACA,QAAQ;YACR,SAAS;YACT,GAAG;QACL;QAEF,MAAM,WAAW,MAAM,MACrB,gGAAoD,IACpD;YACE,QAAQ;YACR,SAAS;gBACT,gBAAgB;YAChB;YACA,MAAM,OAAO,QAAQ;QACvB;QAGA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,KAAK,EAAE;YACd,QAAQ,KAAK,CAAC,uBAAuB,KAAK,KAAK;YAC/C,OAAO;QACT;QAEA,OAAO;YACL,OAAO,KAAK,KAAK;YACjB,SAAS,KAAK,GAAG,KAAK,KAAK,OAAO,GAAG;QACvC;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,QAAQ,YAAY,GAAG,CAAC;IAC9B,MAAM,UAAU,YAAY,GAAG,CAAC;IAEhC,IAAI,CAAC,SAAS,CAAC,SAAS,OAAO;IAE/B,MAAM,aAAa,SAAS,QAAQ,KAAK;IACzC,OAAO,KAAK,GAAG,KAAK;AACtB"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Dev/Applications/auth_gate/app/components/login.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useActionState,useEffect } from \"react\";\r\nimport { login } from \"../hooks/actions\";\r\nimport { useState } from \"react\";\r\nimport { isArcgisTokenValid } from '../lib/authenticateArcGIS'\r\nimport { redirect } from 'next/navigation';\r\n\r\n\r\nexport function LoginForm() {\r\n  const [state, loginAction, pending] = useActionState(login, undefined);\r\n  const [showPopup, setShowPopup] = useState(false); \r\n\r\n  useEffect(() => {\r\n  const checkTokenValidity = async () => {\r\n    const isValid = await isArcgisTokenValid();\r\n    if (isValid) {\r\n    redirect(process.env.NEXT_PUBLIC_GEOPORTAL_URL || '/');\r\n    }\r\n  };\r\n\r\n  checkTokenValidity();\r\n  }, []);\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center  py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8 bg-white/50 rounded-xl shadow-lg overflow-hidden hover:shadow-2xl transition-shadow duration-300\">\r\n        <div className=\"px-8 py-6\">\r\n          <div className=\"text-center\">\r\n        <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n          Welcome back!\r\n        </h2>\r\n          </div>\r\n          <form action={loginAction} className=\"mt-8 space-y-6\">\r\n        <div className=\"rounded-md shadow-sm -space-y-px\">\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"sr-only\">\r\n          Username\r\n            </label>\r\n            <input\r\n          id=\"username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          autoComplete=\"username\"\r\n          required\r\n          className=\"appearance-none rounded-t-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 text-sm hover:border-blue-500 transition-colors duration-200\"\r\n          placeholder=\"Username\"\r\n            />\r\n            {state?.errors?.username && (\r\n          <p className=\"mt-2 text-sm text-red-600\">{state.errors.username}</p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">\r\n          Password\r\n            </label>\r\n            <input\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          required\r\n          className=\"appearance-none rounded-b-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 text-sm hover:border-blue-500 transition-colors duration-200\"\r\n          placeholder=\"Password\"\r\n            />\r\n            {state?.errors?.password && (\r\n          <p className=\"mt-2 text-sm text-red-600\">{state.errors.password}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <SubmitButton pending={pending} />\r\n          </form>\r\n        </div>\r\n        <div className=\"bg-gray-50 px-8 py-4 hover:bg-gray-100 transition-colors duration-200\">\r\n          <div className=\"text-sm\">\r\n            <button onClick={() => setShowPopup(true)} className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n              Don't have an account? Request access\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showPopup && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-sm w-full text-center\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Request Access</h3>\r\n            <p className=\"mb-4 text-sm text-gray-700\">\r\n              Please send an email to{\" \"}\r\n              <a href=\"mailto:fmelebary@jda.gov.sa\" className=\"text-blue-600 underline\">\r\n              fmelebary@jda.gov.sa\r\n              </a>{\" \"}\r\n              including your name, department, and reason for access request.\r\n            </p>\r\n            <button\r\n              onClick={() => setShowPopup(false)}\r\n              className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SubmitButton({ pending }: { pending: boolean }) {\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pending}\r\n        className={`group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${\r\n          pending ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n        }`}\r\n      >\r\n        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n          {pending ? (\r\n            <svg\r\n              className=\"animate-spin h-5 w-5 text-white\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <circle\r\n                className=\"opacity-25\"\r\n                cx=\"12\"\r\n                cy=\"12\"\r\n                r=\"10\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"4\"\r\n              ></circle>\r\n              <path\r\n                className=\"opacity-75\"\r\n                fill=\"currentColor\"\r\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n              ></path>\r\n            </svg>\r\n          ) : null}\r\n        </span>\r\n        {pending ? \"Logging in...\" : \"Log in\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;;AASO,SAAS;IACd,MAAM,CAAC,OAAO,aAAa,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAAE,wHAAA,CAAA,QAAK,EAAE;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACV,MAAM,qBAAqB;YACzB,MAAM,UAAU,MAAM,CAAA,GAAA,gIAAA,CAAA,qBAAkB,AAAD;YACvC,IAAI,SAAS;gBACb,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD,EAAE,6DAAyC;YAClD;QACF;QAEA;IACA,GAAG,EAAE;IAIL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACjB,cAAA,8OAAC;oCAAG,WAAU;8CAA6C;;;;;;;;;;;0CAIzD,8OAAC;gCAAK,QAAQ;gCAAa,WAAU;;kDACvC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAW,WAAU;kEAAU;;;;;;kEAG9C,8OAAC;wDACH,IAAG;wDACH,MAAK;wDACL,MAAK;wDACL,cAAa;wDACb,QAAQ;wDACR,WAAU;wDACV,aAAY;;;;;;oDAET,OAAO,QAAQ,0BAClB,8OAAC;wDAAE,WAAU;kEAA6B,MAAM,MAAM,CAAC,QAAQ;;;;;;;;;;;;0DAG/D,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAW,WAAU;kEAAU;;;;;;kEAG9C,8OAAC;wDACH,IAAG;wDACH,MAAK;wDACL,MAAK;wDACL,cAAa;wDACb,QAAQ;wDACR,WAAU;wDACV,aAAY;;;;;;oDAET,OAAO,QAAQ,0BAClB,8OAAC;wDAAE,WAAU;kEAA6B,MAAM,MAAM,CAAC,QAAQ;;;;;;;;;;;;;;;;;;kDAKjE,8OAAC;wCAAa,SAAS;;;;;;;;;;;;;;;;;;kCAGvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAO,SAAS,IAAM,aAAa;gCAAO,WAAU;0CAAgD;;;;;;;;;;;;;;;;;;;;;;YAM1G,2BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,8OAAC;4BAAE,WAAU;;gCAA6B;gCAChB;8CACxB,8OAAC;oCAAE,MAAK;oCAA8B,WAAU;8CAA0B;;;;;;gCAErE;gCAAI;;;;;;;sCAGX,8OAAC;4BACC,SAAS,IAAM,aAAa;4BAC5B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAQb;AAEA,SAAS,aAAa,EAAE,OAAO,EAAwB;IACrD,qBACE,8OAAC;kBACC,cAAA,8OAAC;YACC,MAAK;YACL,UAAU;YACV,WAAW,CAAC,8NAA8N,EACxO,UAAU,kCAAkC,IAC5C;;8BAEF,8OAAC;oBAAK,WAAU;8BACb,wBACC,8OAAC;wBACC,WAAU;wBACV,OAAM;wBACN,SAAQ;;0CAER,8OAAC;gCACC,WAAU;gCACV,IAAG;gCACH,IAAG;gCACH,GAAE;gCACF,QAAO;gCACP,aAAY;;;;;;0CAEd,8OAAC;gCACC,WAAU;gCACV,MAAK;gCACL,GAAE;;;;;;;;;;;+BAGJ;;;;;;gBAEL,UAAU,kBAAkB;;;;;;;;;;;;AAIrC"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}